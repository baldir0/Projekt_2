{"ast":null,"code":"import axios from \"axios\";\nimport getCookieValue from \"./cookie.js\";\n\nconst login = async event => {\n  event.preventDefault();\n  const loginData = {\n    username: event.target.username.value,\n    password: event.target.password.value\n  };\n\n  if (loginData.username && loginData.password) {\n    return await axios.post(`http://localhost:3001/api/auth/login`, loginData).then(result => {\n      document.cookie = \"sessionid=\" + result.data;\n      if (result.status === 200) return true;else return false;\n    });\n  }\n};\n\nconst validateSession = sessionId => {\n  return axios.get(`http://localhost:3001/api/auth/validate/${sessionId}`).then(result => {\n    if (result.status === 200) return true;else return false;\n  });\n};\n\nconst logout = async () => {\n  const sessionId = getCookieValue('sessionid');\n\n  if (sessionId !== 'undefined') {\n    document.cookie = \"\";\n    return await axios.delete(`http://localhost:3001/api/auth/logout/${sessionId}`).then(result => {\n      if (result.status === 200) return true;else return false;\n    });\n  }\n};\n\nwindow.addEventListener('onbeforeunload', () => {\n  const sessionid = getCookieValue('sessionid');\n\n  if (sessionid && sessionid !== 'undefined') {\n    axios.get(`http://localhost:3001/api/auth/logout/${sessionid}`).then(result => {\n      if (result.status === 200) return true;else return false;\n    });\n  }\n});\nexport default login;\nexport { validateSession, logout };","map":{"version":3,"sources":["E:/Node Projects/ReactApp/Projekt_2/client/app/src/Elements/login.js"],"names":["axios","getCookieValue","login","event","preventDefault","loginData","username","target","value","password","post","then","result","document","cookie","data","status","validateSession","sessionId","get","logout","delete","window","addEventListener","sessionid"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,aAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAOC,KAAP,IAAiB;AAC7BA,EAAAA,KAAK,CAACC,cAAN;AACA,QAAMC,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAEH,KAAK,CAACI,MAAN,CAAaD,QAAb,CAAsBE,KADhB;AAEhBC,IAAAA,QAAQ,EAAEN,KAAK,CAACI,MAAN,CAAaE,QAAb,CAAsBD;AAFhB,GAAlB;;AAIA,MAAIH,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACI,QAApC,EAA8C;AAC5C,WAAO,MAAMT,KAAK,CAACU,IAAN,CAAY,sCAAZ,EAAmDL,SAAnD,EACTM,IADS,CACFC,MAAD,IAAY;AACjBC,MAAAA,QAAQ,CAACC,MAAT,GAAkB,eAAeF,MAAM,CAACG,IAAxC;AACA,UAAIH,MAAM,CAACI,MAAP,KAAkB,GAAtB,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,KAAP;AACN,KALS,CAAb;AAMD;AACF,CAdD;;AAgBA,MAAMC,eAAe,GAAIC,SAAD,IAAe;AACrC,SAAOlB,KAAK,CAACmB,GAAN,CAAW,2CAA0CD,SAAU,EAA/D,EACJP,IADI,CACGC,MAAD,IAAY;AACjB,QAAIA,MAAM,CAACI,MAAP,KAAkB,GAAtB,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,KAAP;AACN,GAJI,CAAP;AAKD,CAND;;AAQA,MAAMI,MAAM,GAAG,YAAY;AACzB,QAAMF,SAAS,GAAGjB,cAAc,CAAC,WAAD,CAAhC;;AACA,MAAIiB,SAAS,KAAK,WAAlB,EAA+B;AAC7BL,IAAAA,QAAQ,CAACC,MAAT,GAAkB,EAAlB;AACA,WAAO,MAAMd,KAAK,CAACqB,MAAN,CAAc,yCAAwCH,SAAU,EAAhE,EACZP,IADY,CACLC,MAAD,IAAY;AACjB,UAAIA,MAAM,CAACI,MAAP,KAAkB,GAAtB,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,KAAP;AACN,KAJY,CAAb;AAKD;AACF,CAVD;;AAYAM,MAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAA0C,MAAM;AAC9C,QAAMC,SAAS,GAAGvB,cAAc,CAAC,WAAD,CAAhC;;AACA,MAAIuB,SAAS,IAAIA,SAAS,KAAK,WAA/B,EAA4C;AAC1CxB,IAAAA,KAAK,CAACmB,GAAN,CAAW,yCAAwCK,SAAU,EAA7D,EACGb,IADH,CACUC,MAAD,IAAY;AACjB,UAAIA,MAAM,CAACI,MAAP,KAAkB,GAAtB,EAA2B,OAAO,IAAP,CAA3B,KACK,OAAO,KAAP;AACN,KAJH;AAKD;AACF,CATD;AAWA,eAAed,KAAf;AACA,SAAQe,eAAR,EAAyBG,MAAzB","sourcesContent":["import axios from \"axios\";\r\nimport getCookieValue from \"./cookie.js\";\r\n\r\nconst login = async (event) => {\r\n  event.preventDefault();\r\n  const loginData = {\r\n    username: event.target.username.value,\r\n    password: event.target.password.value\r\n  }\r\n  if (loginData.username && loginData.password) {\r\n    return await axios.post(`http://localhost:3001/api/auth/login`, loginData)\r\n       .then( (result) => {\r\n         document.cookie = \"sessionid=\" + result.data;\r\n         if (result.status === 200) return true\r\n         else return false\r\n       })\r\n  }\r\n}\r\n\r\nconst validateSession = (sessionId) => {\r\n  return axios.get(`http://localhost:3001/api/auth/validate/${sessionId}`)\r\n    .then( (result) => {\r\n      if (result.status === 200) return true\r\n      else return false\r\n    })\r\n}\r\n\r\nconst logout = async () => {\r\n  const sessionId = getCookieValue('sessionid')\r\n  if (sessionId !== 'undefined') {\r\n    document.cookie = \"\"\r\n    return await axios.delete(`http://localhost:3001/api/auth/logout/${sessionId}`)\r\n    .then( (result) => {\r\n      if (result.status === 200) return true;\r\n      else return false;\r\n    });\r\n  }\r\n}\r\n\r\nwindow.addEventListener('onbeforeunload', () => {\r\n  const sessionid = getCookieValue('sessionid');\r\n  if (sessionid && sessionid !== 'undefined') {\r\n    axios.get(`http://localhost:3001/api/auth/logout/${sessionid}`)\r\n      .then( (result) => {\r\n        if (result.status === 200) return true;\r\n        else return false;\r\n      });\r\n  }\r\n})\r\n\r\nexport default login;\r\nexport {validateSession, logout};"]},"metadata":{},"sourceType":"module"}