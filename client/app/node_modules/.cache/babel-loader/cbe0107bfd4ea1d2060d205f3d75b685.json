{"ast":null,"code":"var _jsxFileName = \"E:\\\\Node Projects\\\\ReactApp\\\\Projekt_2\\\\client\\\\app\\\\src\\\\Elements\\\\LeftBar\\\\LeftMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MenuElement from './MenuElement.js';\nimport axios from 'axios';\nimport './LeftMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LeftMenu = props => {\n  _s();\n\n  const [state, setState] = useState(null);\n  const [elements, setElements] = useState( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading Data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 44\n  }, this));\n  const [title, setTitle] = useState(\"Title\");\n  const [description, setDescription] = useState(\"Description\");\n  const [ingredients, setIngredients] = useState(\"Ingredients\");\n  const [steps, setSteps] = useState(\"Steps\");\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    const deleteSelected = id => {\n      console.log('Del Element With Id: ' + id);\n      axios.delete(`http://localhost:3001/api/delete/delete-recipe/${id}`).then(res => refresh());\n    };\n\n    axios.get(\"http://localhost:3001/api/get/recipes\").then(res => {\n      if (res.status !== 200) {\n        return setElements( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Loading Failed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this));\n      }\n\n      return setElements(res.data.map(r => {\n        return /*#__PURE__*/_jsxDEV(MenuElement, {\n          val: r.title,\n          elementId: r.id,\n          onClick: () => props.setLoadedElement(r.id),\n          editSelected: () => editSelected(r.id),\n          deleteSelected: () => deleteSelected(r.id),\n          src: `http://localhost:3001/api/get/image/${r.icon}`\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      }));\n    });\n  }, [deleteSelected, props]);\n\n  const refresh = () => {\n    setState(null);\n    setElements( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Refreshing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this));\n    axios.get(\"http://localhost:3001/api/get/recipes\").then(res => {\n      if (res.status !== 200) {\n        return setElements( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"Loading Failed!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }, this));\n      }\n\n      return setElements(res.data.map(r => {\n        return /*#__PURE__*/_jsxDEV(MenuElement, {\n          val: r.title,\n          elementId: r.id,\n          onClick: () => props.setLoadedElement(r.id),\n          editState: () => setState(3),\n          src: `http://localhost:3001/api/get/image/${r.icon}`\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n      }));\n    });\n  };\n\n  const createNewSubmit = event => {\n    event.preventDefault();\n    const ingrArray = ingredients.split('\\n');\n    const stepsArray = steps.split('\\n');\n    const fNames = Array.from(files).map(file => file.name);\n    const data = {\n      title: title,\n      description: description,\n      ingredients: ingrArray,\n      steps: stepsArray,\n      files: fNames,\n      icon: fNames[0]\n    };\n    axios.post('http://localhost:3001/api/post/create-recipe', data).then(res => {\n      console.log(res);\n      refresh();\n    });\n    console.log(data);\n  };\n\n  const createNewValueChange = event => {\n    const target = event.target;\n    if (target.id === \"title\") setTitle(target.value);else if (target.id === \"desc\") setDescription(target.value);else if (target.id === \"ingr\") setIngredients(target.value);else if (target.id === \"steps\") setSteps(target.value);else if (target.id === \"files\") setFiles(target.files);\n  };\n\n  const createNew = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: createNewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          id: \"title\",\n          onChange: createNewValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          id: \"desc\",\n          onChange: createNewValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ingr\",\n          children: \"Ingredients - Separated By New Line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Ingredients\",\n          id: \"ingr\",\n          onChange: createNewValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"steps\",\n          children: \"Steps  - Separated By New Line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Steps\",\n          id: \"steps\",\n          onChange: createNewValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"files\",\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"files\",\n          multiple: true,\n          onChange: createNewValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => setState(null),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n\n  const editSelected = id => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-element\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Selected Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          placeholder: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => setState(null),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu left\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elements\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button refresh\",\n        onClick: () => refresh(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"RefreshItem.svg\",\n          alt: \"refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button add\",\n        onClick: () => setState(1),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"AddItem.svg\",\n          alt: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), state === 1 ? createNew() : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LeftMenu, \"UlIwT/ovXTrZN3WzRoiQZov7ypI=\");\n\n_c = LeftMenu;\nexport default LeftMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftMenu\");","map":{"version":3,"sources":["E:/Node Projects/ReactApp/Projekt_2/client/app/src/Elements/LeftBar/LeftMenu.js"],"names":["React","useState","useEffect","MenuElement","axios","LeftMenu","props","state","setState","elements","setElements","title","setTitle","description","setDescription","ingredients","setIngredients","steps","setSteps","files","setFiles","deleteSelected","id","console","log","delete","then","res","refresh","get","status","data","map","r","setLoadedElement","editSelected","icon","createNewSubmit","event","preventDefault","ingrArray","split","stepsArray","fNames","Array","from","file","name","post","createNewValueChange","target","value","createNew"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MenuElement from './MenuElement.js';\r\nimport axios from 'axios';\r\n\r\nimport './LeftMenu.css';\r\n\r\nconst LeftMenu = (props) => {\r\n  const [state, setState] = useState(null);\r\n  const [elements, setElements] = useState(<div className=\"loading\">Loading Data...</div>);\r\n\r\n  const [title, setTitle] = useState(\"Title\");\r\n  const [description, setDescription] = useState(\"Description\");\r\n  const [ingredients, setIngredients] = useState(\"Ingredients\");\r\n  const [steps, setSteps] = useState(\"Steps\");\r\n  const [files, setFiles] = useState([]);\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    const deleteSelected = (id) => {\r\n      console.log('Del Element With Id: ' + id)\r\n      axios.delete(`http://localhost:3001/api/delete/delete-recipe/${id}`)\r\n        .then( (res) => refresh());\r\n    }\r\n    \r\n    axios.get(\"http://localhost:3001/api/get/recipes\")\r\n      .then( (res) => {\r\n        if (res.status !== 200) {\r\n          return setElements(<div className=\"error\">Loading Failed!</div>);\r\n        }\r\n\r\n        return setElements(res.data.map( (r) => {\r\n          return <MenuElement \r\n          val={r.title} \r\n          key={r.id} \r\n          elementId={r.id} \r\n          onClick={() => props.setLoadedElement(r.id)} \r\n          editSelected={() => editSelected(r.id)}\r\n          deleteSelected={() => deleteSelected(r.id)}\r\n          src={`http://localhost:3001/api/get/image/${r.icon}`} />\r\n        }));\r\n      })\r\n  }, [deleteSelected, props]);\r\n  \r\n  const refresh = () => {\r\n    setState(null);\r\n    setElements(<div className=\"loading\">Refreshing...</div>)\r\n    axios.get(\"http://localhost:3001/api/get/recipes\")\r\n    .then( (res) => {\r\n      if (res.status !== 200) {\r\n        return setElements(<div className=\"error\">Loading Failed!</div>);\r\n      }\r\n  \r\n      return setElements(res.data.map( (r) => {\r\n        return <MenuElement \r\n          val={r.title} \r\n          key={r.id} \r\n          elementId={r.id} \r\n          onClick={() => props.setLoadedElement(r.id)} \r\n          editState={() => setState(3)}\r\n          src={`http://localhost:3001/api/get/image/${r.icon}`}  />\r\n      }));\r\n    })\r\n  }\r\n\r\n  const createNewSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const ingrArray = ingredients.split('\\n');\r\n    const stepsArray = steps.split('\\n');\r\n    const fNames = Array.from(files).map( (file) => file.name );\r\n\r\n    const data = {\r\n      title: title,\r\n      description: description,\r\n      ingredients: ingrArray,\r\n      steps: stepsArray,\r\n      files: fNames,\r\n      icon: fNames[0]\r\n    }\r\n\r\n    axios.post('http://localhost:3001/api/post/create-recipe', data)\r\n      .then(res => {\r\n        console.log(res);\r\n        refresh();\r\n      })\r\n\r\n    console.log(data)\r\n\r\n  }\r\n\r\n  const createNewValueChange = (event) => {\r\n    const target = event.target;\r\n    if (target.id === \"title\") setTitle(target.value);\r\n    else if (target.id === \"desc\") setDescription(target.value);\r\n    else if (target.id === \"ingr\") setIngredients(target.value);\r\n    else if (target.id === \"steps\") setSteps(target.value);\r\n    else if (target.id === \"files\") setFiles(target.files);\r\n  }\r\n\r\n  const createNew = () => {\r\n    return (\r\n      <div className = \"new-element\">\r\n        <h1>Create New Recipe</h1>\r\n        <form className = \"form\" onSubmit = {createNewSubmit}>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input type=\"text\" placeholder=\"Title\" id=\"title\" onChange={createNewValueChange}/>\r\n  \r\n          <label htmlFor=\"desc\">Description</label>\r\n          <textarea placeholder=\"Description\" id=\"desc\" onChange={createNewValueChange}></textarea>\r\n  \r\n          <label htmlFor=\"ingr\">Ingredients - Separated By New Line</label>\r\n          <textarea placeholder=\"Ingredients\" id=\"ingr\" onChange={createNewValueChange}></textarea>\r\n  \r\n          <label htmlFor=\"steps\">Steps  - Separated By New Line</label>\r\n          <textarea placeholder=\"Steps\" id=\"steps\" onChange={createNewValueChange}></textarea>\r\n  \r\n          <label htmlFor=\"files\">Images</label>\r\n          <input type=\"file\" id=\"files\" multiple onChange={createNewValueChange}/>\r\n  \r\n          <input type=\"submit\" value=\"Create New\"/>\r\n        </form>\r\n        <div className = \"close\" onClick={() => setState(null)}>X</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const editSelected = (id) => {\r\n    return (\r\n      <div className = \"edit-element\">\r\n        <h1>Edit Selected Recipe</h1>\r\n        <form>\r\n          <input type=\"text\" id=\"title\" placeholder=\"title\"></input>\r\n  \r\n        </form>\r\n        <textarea id=\"description\"></textarea>\r\n  \r\n        <div className = \"close\" onClick={() => setState(null)}>X</div>\r\n      </div>)\r\n  }\r\n\r\n  return (\r\n  <div className=\"menu left\">\r\n    <div className=\"banner\">\r\n      Menu\r\n    </div>\r\n    <div className=\"elements\">\r\n      {elements}\r\n    </div>\r\n    <div className=\"controls\">\r\n      <div className=\"button refresh\" onClick={() => refresh()}><img src=\"RefreshItem.svg\" alt=\"refresh\"/></div>\r\n      <div className=\"button add\" onClick={() => setState(1)}><img src=\"AddItem.svg\" alt=\"add\"/></div>\r\n    </div>\r\n    { state === 1 ? createNew() : null }\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;"]},"metadata":{},"sourceType":"module"}