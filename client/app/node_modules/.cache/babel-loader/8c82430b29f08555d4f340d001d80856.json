{"ast":null,"code":"var _jsxFileName = \"E:\\\\Node Projects\\\\ReactApp\\\\Projekt_2\\\\client\\\\app\\\\src\\\\Components\\\\MenuComponent\\\\MenuComponent.js\",\n    _s = $RefreshSig$();\n\n// Modules\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'; // Components\n\nimport MenuElement from './MenuElement/MenuElement.js';\nimport MenuPanel from './MenuPanel/MenuPanel.js';\nimport './MenuComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOADING_ERROR_MESSAGE = 'Failed To Load Data';\n\nconst MenuComponent = props => {\n  _s();\n\n  const [MenuElements, setMenuElements] = useState(['Init Data']);\n\n  const refresh = () => {\n    fetchMenuElements();\n  }; // Fetch Menu Elements From DataBase\n  // Fetch Method\n\n\n  const fetchMenuElements = async () => {\n    setMenuElements('Fetching ...');\n    return await axios.get(\"http://localhost:3001/api/get/recipes\").then(res => {\n      if (res.status !== 200) setMenuElements(LOADING_ERROR_MESSAGE);\n      return setMenuElements(res.data.map(data => {\n        return /*#__PURE__*/_jsxDEV(MenuElement, {\n          data: {\n            key: data.id,\n            title: data.title,\n            id: data.id,\n            icon: `http://localhost:3001/api/get/image/${data.icon}`\n          },\n          loadedElement: props.loadedElement,\n          editElement: props.isEditing,\n          editElementId: props.editingElement\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 18\n        }, this);\n      }));\n    }).catch(err => {\n      console.error(err);\n      setMenuElements(LOADING_ERROR_MESSAGE);\n    });\n  }; // Only on page load\n\n\n  useEffect(() => {\n    fetchMenuElements();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-banner\",\n      children: \"Recipe List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: // If MenuLength === 0 => Error Message\n      // Else MenuElements\n      MenuElements ? MenuElements : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: MenuElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPanel, {\n      refresh: refresh,\n      isAdding: props.isAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuComponent, \"jBxOMrKsx5tKLCjkKKij8+zFPq8=\");\n\n_c = MenuComponent;\nexport default MenuComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuComponent\");","map":{"version":3,"sources":["E:/Node Projects/ReactApp/Projekt_2/client/app/src/Components/MenuComponent/MenuComponent.js"],"names":["useState","useEffect","axios","MenuElement","MenuPanel","LOADING_ERROR_MESSAGE","MenuComponent","props","MenuElements","setMenuElements","refresh","fetchMenuElements","get","then","res","status","data","map","key","id","title","icon","loadedElement","isEditing","editingElement","catch","err","console","error","isAdding"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,qBAAP;;AAEA,MAAMC,qBAAqB,GAAG,qBAA9B;;AAEA,MAAMC,aAAa,GAAKC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAC,WAAD,CAAD,CAAhD;;AAEA,QAAMU,OAAO,GAAG,MAAM;AACpBC,IAAAA,iBAAiB;AAClB,GAFD,CAJgC,CAQhC;AACA;;;AACA,QAAMA,iBAAiB,GAAG,YAAY;AACpCF,IAAAA,eAAe,CAAC,cAAD,CAAf;AACA,WAAO,MAAMP,KAAK,CAACU,GAAN,CAAU,uCAAV,EACVC,IADU,CACJC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwBN,eAAe,CAACJ,qBAAD,CAAf;AAExB,aAAOI,eAAe,CAACK,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAcD,IAAD,IAAU;AAC5C,4BAAO,QAAC,WAAD;AAEL,UAAA,IAAI,EACJ;AACEE,YAAAA,GAAG,EAAEF,IAAI,CAACG,EADZ;AAEEC,YAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFd;AAGED,YAAAA,EAAE,EAAEH,IAAI,CAACG,EAHX;AAIEE,YAAAA,IAAI,EAAG,uCAAsCL,IAAI,CAACK,IAAK;AAJzD,WAHK;AAUL,UAAA,aAAa,EAAEd,KAAK,CAACe,aAVhB;AAWL,UAAA,WAAW,EAAEf,KAAK,CAACgB,SAXd;AAYL,UAAA,aAAa,EAAEhB,KAAK,CAACiB;AAZhB,WACAR,IAAI,CAACG,EADL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAaD,OAdsB,CAAD,CAAtB;AAeD,KAnBU,EAoBVM,KApBU,CAoBHC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAjB,MAAAA,eAAe,CAACJ,qBAAD,CAAf;AACD,KAvBU,CAAb;AAwBD,GA1BD,CAVgC,CAsChC;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEE;AACA;AACAH,MAAAA,YAAY,GAAGA,YAAH,gBAAkB;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,kBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AAJhC;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,SAAD;AACE,MAAA,OAAO,EAAEE,OADX;AAEE,MAAA,QAAQ,EAAEH,KAAK,CAACsB;AAFlB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3DD;;GAAMvB,a;;KAAAA,a;AA6DN,eAAeA,aAAf","sourcesContent":["// Modules\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n// Components\r\nimport MenuElement from './MenuElement/MenuElement.js'\r\nimport MenuPanel from './MenuPanel/MenuPanel.js'\r\n\r\nimport './MenuComponent.css';\r\n\r\nconst LOADING_ERROR_MESSAGE = 'Failed To Load Data'\r\n\r\nconst MenuComponent = ((props) => {\r\n\r\n  const [MenuElements, setMenuElements] = useState(['Init Data']);\r\n\r\n  const refresh = () => {\r\n    fetchMenuElements();\r\n  }\r\n\r\n  // Fetch Menu Elements From DataBase\r\n  // Fetch Method\r\n  const fetchMenuElements = async () => {\r\n    setMenuElements('Fetching ...')\r\n    return await axios.get(\"http://localhost:3001/api/get/recipes\")\r\n      .then((res) => {\r\n        if (res.status !== 200) setMenuElements(LOADING_ERROR_MESSAGE);\r\n\r\n        return setMenuElements(res.data.map((data) => {\r\n          return <MenuElement \r\n            key={data.id}\r\n            data={\r\n            {\r\n              key: data.id,\r\n              title: data.title,\r\n              id: data.id,\r\n              icon: `http://localhost:3001/api/get/image/${data.icon}`\r\n            }\r\n            }\r\n            loadedElement={props.loadedElement} \r\n            editElement={props.isEditing}\r\n            editElementId={props.editingElement}/>\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        setMenuElements(LOADING_ERROR_MESSAGE);\r\n      })\r\n  }\r\n\r\n  // Only on page load\r\n  useEffect(() => {\r\n    fetchMenuElements()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className='menu'>\r\n      <span className='text-banner'>Recipe List</span>\r\n      <div className=\"recipe-list\">\r\n      {\r\n        // If MenuLength === 0 => Error Message\r\n        // Else MenuElements\r\n        MenuElements ? MenuElements : <span className=\"error-message\">{MenuElements}</span>\r\n      }\r\n      </div>\r\n      <MenuPanel \r\n        refresh={refresh} \r\n        isAdding={props.isAdding}/>\r\n    </div>\r\n    )\r\n})\r\n\r\nexport default MenuComponent;"]},"metadata":{},"sourceType":"module"}